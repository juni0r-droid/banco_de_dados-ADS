CREATE DATABASE HAMBURGUERIA4
-- Exercício 1
--Crie uma tabela Categorias
CREATE TABLE CATEGORIAS (
CATEGORIA_ID INT PRIMARY KEY,
NOME NVARCHAR(80) NOT NULL
);
-- Exercício 2
--Crie uma tabela Produtos 
CREATE TABLE PRODUTOS (
PRODUTO_ID INT PRIMARY KEY,
NOME NVARCHAR(100) NOT NULL,
PRECO DECIMAL (10,2),
CATEGORIA_ID INT
);
-- Exercício 3
--Utilize ALTER TABLE para adicionar uma chave estrangeira em Produtos,
--referenciando CategoriaID da tabela Categorias.
ALTER TABLE PRODUTOS
ADD CONSTRAINT FK_PRODUTO
FOREIGN KEY (CATEGORIA_ID)
REFERENCES CATEGORIAS(CATEGORIA_ID);

-- Exercício 4
--Crie a tabela Clientes 
CREATE TABLE CLIENTES (
CLIENTE_ID INT PRIMARY KEY,
NOME NVARCHAR(100) NOT NULL,
EMAIL NVARCHAR(100) UNIQUE
);

 --Exercício 5
--Crie a tabela Enderecos
CREATE TABLE ENDERECOS (
ENDERECO_ID INT PRIMARY KEY,
RUA NVARCHAR(100),
CIDADE NVARCHAR(100),
ESTADO NVARCHAR(100),
CLIENTE_ID INT
);
--Depois, adicione uma chave estrangeira com ALTER TABLE, ligando EnderecoID a ClienteID.
ALTER TABLE ENDERECOS
ADD CONSTRAINT FK_ENDERECO_CLIENTE
FOREIGN KEY (CLIENTE_ID)
REFERENCES CLIENTES(CLIENTE_ID);

-- Exercício 6: Altere a coluna ClienteID da tabela Enderecos para NOT NULL.
ALTER TABLE ENDERECOS 
ALTER COLUMN CLIENTE_ID INT NOT NULL;

-- Exercício 7: Crie uma tabela Pedidos
CREATE TABLE PEDIDOS (
PEDIDO_ID INT PRIMARY KEY,
CLIENTE_ID INT,
DATA_PEDIDO DATE,
VALOR_TOTAL DECIMAL (10, 2)
);

--Adicione a chave estrangeira com ALTER TABLE.
ALTER TABLE PEDIDOS
ADD CONSTRAINT FK_PEDIDOS_CLIENTE
FOREIGN KEY (CLIENTE_ID)
REFERENCES CLIENTES(CLIENTE_ID);

-- Exercício 8: Crie a tabela ItensPedido
CREATE TABLE ITENS_PEDIDO (
ITEM_ID INT PRIMARY KEY,
PEDIDO_ID INT,
PRODUTO_ID INT,
QUANTIDADE INT,
PRECO_UNITARIO DECIMAL(10, 2)
);

--E adicione duas chaves estrangeiras:
--PedidoID → Pedidos
--ProdutoID → Produtos
ALTER TABLE ITENS_PEDIDO
ADD CONSTRAINT FK_ITENSPEDIDO_PEDIDO
FOREIGN KEY (PEDIDO_ID) 
REFERENCES PEDIDOS(PEDIDO_ID);

ALTER TABLE ITENS_PEDIDO
ADD CONSTRAINT FK_ITENSPEDIDO_PRODUTO
FOREIGN KEY (PRODUTO_ID) 
REFERENCES PRODUTOS(PRODUTO_ID);

--novas tabelas:
CREATE TABLE TRANSPORTADORAS (
TRANSPORTADORA_ID INT PRIMARY KEY,
NOME NVARCHAR(40),
TELEFONE NVARCHAR(40),
);

CREATE TABLE ENTREGAS (
ENTREGA_ID INT PRIMARY KEY,
PEDIDO_ID INT,
DATA_ENVIO DATE,
DATA_ENTREGA DATE,
TRANSPORTADORA_ID INT,
FOREIGN KEY (PEDIDO_ID) REFERENCES PEDIDOS(PEDIDO_ID),
FOREIGN KEY (TRANSPORTADORA_ID) REFERENCES
TRANSPORTADORAS(TRANSPORTADORA_ID)
);

CREATE TABLE ESTOQUE (
PRODUTO_ID INT PRIMARY KEY,
QUANTIDADE INT NOT NULL,
ULTIMA_REPOSICAO DATE,
FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTOS(PRODUTO_ID)
);

--exercício 9: produtos com baixa no estoque.
--Liste os produtos com estoque abaixo de 10 unidades e exiba também a data da última
--reposição e a categoria:
SELECT 
    PRODUTOS.NOME AS PRODUTO,
    ESTOQUE.QUANTIDADE,
    ESTOQUE.ULTIMA_REPOSICAO AS DATA_ULTIMA_REPOSICAO,
    CATEGORIAS.NOME AS CATEGORIA
FROM ESTOQUE
INNER JOIN PRODUTOS ON ESTOQUE.PRODUTO_ID = PRODUTOS.PRODUTO_ID
INNER JOIN CATEGORIAS ON PRODUTOS.CATEGORIA_ID = CATEGORIAS.CATEGORIA_ID
WHERE ESTOQUE.QUANTIDADE < 10;

--Exercício 10 — Tempo médio de entrega por transportadora
--Exiba o nome da transportadora e o tempo médio de entrega em dias.
SELECT 
    TRANSPORTADORAS.NOME AS TRANSPORTADORA, 
    AVG(DATEDIFF(DAY, ENTREGAS.DATA_ENVIO, ENTREGAS.DATA_ENTREGA)) AS TEMPO_MEDIO_ENTREGA
FROM ENTREGAS
INNER JOIN TRANSPORTADORAS 
    ON ENTREGAS.TRANSPORTADORA_ID = TRANSPORTADORAS.TRANSPORTADORA_ID
GROUP BY TRANSPORTADORAS.NOME;

--Exercício 11 — Produtos mais bem avaliados
--Liste os produtos que possuem média de avaliação maior que 4.0, com nome e média das notas.
ALTER TABLE PRODUTOS ADD AVALIACOES DECIMAL(3, 1)
SELECT NOME, AVALIACOES FROM PRODUTOS WHERE AVALIACOES > 4.0

--Exercício 12 — Clientes com mais de 3 pedidos e total gasto
--Exiba os clientes que fizeram mais de 3 pedidos, mostrando seu nome, total de pedidos e o
--valor total gasto:
SELECT 
    C.NOME AS CLIENTES,
    COUNT(P.PEDIDO_ID) AS TOTAL_PEDIDOS,
    SUM(P.VALOR_TOTAL) AS TOTAL_GASTO
FROM 
    CLIENTES C
left JOIN 
    PEDIDOS P ON C.CLIENTE_ID = P.CLIENTE_ID
GROUP BY 
    C.CLIENTE_ID, C.NOME
HAVING 
    COUNT(P.PEDIDO_ID) > 3;

--Exercício 13 — Produtos nunca vendidos
--Liste todos os produtos que nunca apareceram em um item de pedido
SELECT * FROM PRODUTOS P
LEFT JOIN ITENS_PEDIDO ip ON P.PRODUTO_ID = ip.PRODUTO_ID
WHERE ip.PRODUTO_ID IS NULL;

--Exercício 14 — Faturamento total por mês (últimos 6 meses)
--Mostre o mês/ano e o total de vendas (valor dos pedidos), ordenados do mais recente para
--o mais antigo
SELECT 
    FORMAT(DATA_PEDIDO, 'MM/yyyy') AS MES_ANO,
    SUM(VALOR_TOTAL) AS FATURAMENTO_TOTAL
FROM PEDIDOS
WHERE DATA_PEDIDO >= DATEADD(MONTH, -4, GETDATE())
GROUP BY FORMAT(DATA_PEDIDO, 'MM/yyyy')
ORDER BY MAX(DATA_PEDIDO) DESC;

--Exercício 15 — Ranking dos 5 clientes que mais gastaram
--Liste os 5 clientes que mais gastaram em pedidos (TOP 5), com nome e valor total.
SELECT TOP 5 
    C.NOME AS CLIENTE,
    SUM(P.VALOR_TOTAL) AS TOTAL_GASTO
FROM PEDIDOS P
INNER JOIN CLIENTES C ON P.CLIENTE_ID = C.CLIENTE_ID
GROUP BY C.CLIENTE_ID, C.NOME
ORDER BY TOTAL_GASTO DESC;



--inserts
 --categoria:
 INSERT INTO CATEGORIAS (CATEGORIA_ID, NOME) VALUES
(1, 'Hambúrgueres'),
(2, 'Bebidas'),
(3, 'Acompanhamentos');

--produtos:
INSERT INTO PRODUTOS (PRODUTO_ID, NOME, PRECO, CATEGORIA_ID) VALUES
(1, 'Cheeseburger', 20.00, 1),
(2, 'X-Bacon', 25.00, 1),
(3, 'Refrigerante Lata', 8.00, 2),
(4, 'Batata Frita Média', 12.00, 3),
(5, 'Combo X-Salada + Refri', 35.00, 1);
--UPDATE PRA COLUNA AVALIACOES DE PRODUTOS:
UPDATE PRODUTOS SET AVALIACOES  = 4.0
WHERE PRODUTO_ID = 1;
UPDATE PRODUTOS SET AVALIACOES  = 5.0
WHERE PRODUTO_ID = 2;
UPDATE PRODUTOS SET AVALIACOES  = 10.0
WHERE PRODUTO_ID = 3;
UPDATE PRODUTOS SET AVALIACOES  = 7.0
WHERE PRODUTO_ID = 4;
UPDATE PRODUTOS SET AVALIACOES  = 3.0
WHERE PRODUTO_ID = 5;

--clientes:
INSERT INTO CLIENTES (CLIENTE_ID, NOME, EMAIL) VALUES
(1, 'João Burguer', 'joao@gmail.com'),
(2, 'Ana sla', 'ana@gmail.com'),
(3, 'jeferson', 'jef@gmail.com');

INSERT INTO CLIENTES (CLIENTE_ID, NOME, EMAIL) VALUES
(4, 'Jeff', 'jeffin@gmail.com'),
(5, 'Roger', 'Roger@gmail.com'),
(6, 'Elisa', 'Elisa@gmail.com');

--endereços;
INSERT INTO ENDERECOS (ENDERECO_ID, RUA, CIDADE, ESTADO, CLIENTE_ID) VALUES
(1, 'Rua dos Pães', 'São Paulo', 'SP', 1),
(2, 'Avenida do Bacon', 'Campinas', 'SP', 2),
(3, 'Rua jorgin', 'Paraná', 'PR', 3);

INSERT INTO ENDERECOS (ENDERECO_ID, RUA, CIDADE, ESTADO, CLIENTE_ID) VALUES
(4, 'Rua dos Pães2', 'São Paulo', 'SP', 4),
(5, 'Avenida do Arroz', 'Campinas', 'SP', 5),
(6, 'Rua Oliveira', 'Paraná', 'PR', 6);

--pedidos:
INSERT INTO PEDIDOS (PEDIDO_ID, CLIENTE_ID, DATA_PEDIDO, VALOR_TOTAL) VALUES
(1, 1, '2025-04-18', 68.00),
(2, 2, '2025-04-18', 37.00),
(3, 3, '2025-04-18', 40.00);

INSERT INTO PEDIDOS (PEDIDO_ID, CLIENTE_ID, DATA_PEDIDO, VALOR_TOTAL) VALUES
(4, 1, '2025-04-19', 30.00),
(5, 3, '2025-04-19', 14.00),
(6, 1, '2025-04-20', 8.00),
(7, 1, '2025-04-21', 8.00);

INSERT INTO PEDIDOS (PEDIDO_ID, CLIENTE_ID, DATA_PEDIDO, VALOR_TOTAL) VALUES
(8, 1, '2025-07-19', 30.00),
(9, 3, '2025-06-19', 14.00);

INSERT INTO PEDIDOS (PEDIDO_ID, CLIENTE_ID, DATA_PEDIDO, VALOR_TOTAL) VALUES
(10, 4, '2025-08-18', 70.00),
(11, 5, '2025-04-18', 33.00),
(12, 6, '2025-05-18', 41.00);




--transportadoras:
INSERT INTO TRANSPORTADORAS (TRANSPORTADORA_ID, NOME, TELEFONE) VALUES
(1, 'Rápido Entregas', '(11) 99999-1234'),
(2, 'Flash Transportes', '(11) 98888-5678');

--entregas:
INSERT INTO ENTREGAS (ENTREGA_ID, PEDIDO_ID, DATA_ENVIO, DATA_ENTREGA, TRANSPORTADORA_ID) VALUES
(1, 1, '2025-04-18', '2025-04-18', 1),
(2, 2, '2025-04-18', '2025-04-19', 2),
(3, 3, '2025-04-18', '2025-04-20', 1);

--estoque:
INSERT INTO ESTOQUE (PRODUTO_ID, QUANTIDADE, ULTIMA_REPOSICAO) VALUES
(1, 15, '2025-04-10'),
(2, 8, '2025-04-12'),
(3, 20, '2025-04-11'),
(4, 5, '2025-04-13'),
(5, 3, '2025-04-09');


--itens_pedidos:
INSERT INTO ITENS_PEDIDO (ITEM_ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, PRECO_UNITARIO) VALUES
(1, 1, 1, 2, 20.00),   
(2, 1, 3, 2, 8.00),    
(3, 2, 5, 1, 35.00),   
(4, 2, 4, 1, 12.00),   
(5, 3, 4, 1, 12.00);

--select:
SELECT * FROM CATEGORIAS
SELECT * FROM PRODUTOS
SELECT * FROM CLIENTES
SELECT * FROM ENDERECOS
SELECT * FROM PEDIDOS
SELECT * FROM ITENS_PEDIDO
SELECT * FROM TRANSPORTADORAS
SELECT * FROM ENTREGAS
SELECT * FROM ESTOQUE